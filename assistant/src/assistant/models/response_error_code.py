# coding: utf-8

"""
    OpenAI API

    The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

    The version of the OpenAPI document: 2.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class ResponseErrorCode(str, Enum):
    """
    The error code for the response. 
    """

    """
    allowed enum values
    """
    SERVER_ERROR = 'server_error'
    RATE_LIMIT_EXCEEDED = 'rate_limit_exceeded'
    INVALID_PROMPT = 'invalid_prompt'
    VECTOR_STORE_TIMEOUT = 'vector_store_timeout'
    INVALID_IMAGE = 'invalid_image'
    INVALID_IMAGE_FORMAT = 'invalid_image_format'
    INVALID_BASE64_IMAGE = 'invalid_base64_image'
    INVALID_IMAGE_URL = 'invalid_image_url'
    IMAGE_TOO_LARGE = 'image_too_large'
    IMAGE_TOO_SMALL = 'image_too_small'
    IMAGE_PARSE_ERROR = 'image_parse_error'
    IMAGE_CONTENT_POLICY_VIOLATION = 'image_content_policy_violation'
    INVALID_IMAGE_MODE = 'invalid_image_mode'
    IMAGE_FILE_TOO_LARGE = 'image_file_too_large'
    UNSUPPORTED_IMAGE_MEDIA_TYPE = 'unsupported_image_media_type'
    EMPTY_IMAGE_FILE = 'empty_image_file'
    FAILED_TO_DOWNLOAD_IMAGE = 'failed_to_download_image'
    IMAGE_FILE_NOT_FOUND = 'image_file_not_found'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ResponseErrorCode from a JSON string"""
        return cls(json.loads(json_str))


